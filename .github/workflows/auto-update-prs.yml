name: Auto-update PR branches

on:
  push:
    branches:
      - master

permissions:
  contents: write
  pull-requests: write

jobs:
  update-prs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GitHub CLI
        run: |
          sudo apt update
          sudo apt install -y gh

      - name: Authenticate GitHub CLI
        run: gh auth setup-git
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Git user
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Actions"

      - name: Auto-update PRs with label 'autoupdate'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking 'autoupdate'-labeled PRs..."

          gh pr list --state open --json number,title,labels,isCrossRepository,mergeable,headRefName \
          --jq '.[] | select(.labels | any(.name == "autoupdate")) | {number, title, labels: [.labels[].name], isCrossRepository, mergeable, headRefName}' > prs.json

          cat prs.json | jq -c '.' | while read -r pr; do
            number=$(echo "$pr" | jq -r '.number')
            title=$(echo "$pr" | jq -r '.title')
            isFork=$(echo "$pr" | jq -r '.isCrossRepository')
            mergeable=$(echo "$pr" | jq -r '.mergeable')
            branch=$(echo "$pr" | jq -r '.headRefName')

            echo ""
            echo "üîç PR #$number: $title"

            if [ "$isFork" = "true" ]; then
              echo "‚ùå Skipped: PR is from a fork"
              continue
            fi

            if [ "$mergeable" != "MERGEABLE" ]; then
              echo "‚ùå Skipped: PR is not mergeable (status: $mergeable)"
              continue
            fi

            echo "‚úÖ PR #$number is eligible. Updating..."

            gh pr checkout "$number"
            git fetch origin master
            git merge origin/master --no-edit || {
              echo "‚ùå Merge conflict in PR #$number. Skipping."
              continue
            }

            git push origin HEAD
            echo "‚úÖ Successfully updated PR #$number"
          done
